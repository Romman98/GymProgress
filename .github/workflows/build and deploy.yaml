name: CI/CD Pipeline
'on':
  push:
    branches:
      - master
jobs:
  build-and-push:
    name: Build and Push Docker
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: romman1998/gymprogress
      IMAGE_TAG: latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: '${{ secrets.DOCKER_USERNAME }}'
          password: '${{ secrets.DOCKER_PASSWORD }}'
      - name: Build Docker image
        run: 'docker build -t $IMAGE_NAME:$IMAGE_TAG .'
      - name: Push Docker image
        run: 'docker push $IMAGE_NAME:$IMAGE_TAG'
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Terraform
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          AWS_SECRET_ACCESS_KEY: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          AWS_DEFAULT_REGION: us-east-1
        run: terraform init
      - name: Terraform Format
        run: terraform fmt -check
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          AWS_SECRET_ACCESS_KEY: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          AWS_DEFAULT_REGION: us-east-1
        run: terraform plan -out=tfplan
      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          AWS_SECRET_ACCESS_KEY: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          AWS_DEFAULT_REGION: us-east-1
        run: terraform apply -auto-approve tfplan
      - name: Get EC2 IP
        id: get_ip
        env:
          AWS_ACCESS_KEY_ID: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          AWS_SECRET_ACCESS_KEY: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          AWS_DEFAULT_REGION: us-east-1
        run: |
          IP=$(terraform output -raw ec2_public_ip)
          echo "EC2_IP=$IP" >> $GITHUB_ENV
          echo "ec2_ip=$IP" >> $GITHUB_OUTPUT
  use-ip:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Print EC2 IP from Terraform output
        run: >-
          echo "Deployed EC2 instance is at ${{ needs.terraform.outputs.ec2_ip
          }}"
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: terraform
    env:
      IMAGE_NAME: romman1998/gymprogress
      IMAGE_TAG: latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Show EC2 IP
        run: 'echo "EC2 IP is ${{ needs.terraform.outputs.EC2_IP }}"'
      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y openssh-client
      - name: Deploy Docker container on EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: '${{ needs.terraform.outputs.EC2_IP }}'
          username: ec2-user
          key: '${{ secrets.SSH_PRIVATE_KEY }}'
          port: 22
          script: >
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{
            secrets.DOCKER_USERNAME }} --password-stdin

            docker pull $IMAGE_NAME:$IMAGE_TAG

            /home/ec2-user/deploy.sh
